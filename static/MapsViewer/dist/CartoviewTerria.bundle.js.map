{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap","webpack:///./img/terria-logo.png","webpack:///./src/components/Navbar/Navbar.jsx","webpack:///./src/components/MapCard/MapCard.jsx","webpack:///./src/components/MapCard/Styles.js","webpack:///./src/components/MapList/MapSettings/MapSettings.jsx","webpack:///./src/components/MapList/MapSettings/Styles.js","webpack:///./src/components/MapList/MapView/GridView.jsx","webpack:///./src/components/Navbar/ToggleView.jsx","webpack:///./src/components/Dialog/Styles.js","webpack:///./src/components/Navbar/Styles.js","webpack:///./src/components/StyledRadio/StyledRadio.jsx","webpack:///./src/components/TerriaViewer.jsx","webpack:///./src/components/Dialog/DialogWrapper.jsx","webpack:///./src/components/Dialog/DialogComponents.jsx","webpack:///./src/components/MapList/MapView/ListView.jsx","webpack:///./src/components/MapList/Styles.js","webpack:///./src/components/MapList/MapList.jsx","webpack:///./src/components/MapList/MapView/ListItem/ListItem.jsx","webpack:///./src/index.js","webpack:///./src/components/CircularProgress/CustomCircularProgress.jsx"],"names":["root","factory","exports","module","define","amd","window","webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","0","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","oldJsonpFunction","slice","Navbar","classes","mapsView","handleChangeMapsView","disableGutters","href","className","navLink","title","src","alt","media","variant","type","color","noWrap","smDown","toggle","propTypes","isRequired","string","func","withStyles","MapCard","props","state","open","anchorEl","openDialog","handleToggle","setState","handleClose","event","anchorRef","current","contains","target","copyTo","id","urls","getTerriaUrl","handleDialogToggle","createRef","this","map","openSnack","card","image","thumbnail_url","onClick","location","avatar","aria-label","owner__username","toUpperCase","action","ref","aria-controls","undefined","placement","transition","TransitionProps","style","transformOrigin","onClickAway","autoFocusItem","menuItemButton","menuItemIcon","menuItemText","aria-haspopup","mapDetailsURL","getMapDetailsUrl","onDialogChange","subheader","Date","date","toDateString","Component","width","minHeight","height","boxShadow","border","transform","cursor","backgroundColor","cyan","padding","marginLeft","mapDescribtion","MapSettings","sortMapsBy","handleChange","filterMapsBy","handleFilterChange","currentUsername","newMapURL","useState","openSortMenu","setOpenSortMenu","openFilterMenu","setOpenFilterMenu","anchorSortRef","useRef","anchorFilterRef","handleSortMenuClose","handleFilterMenuClose","settingWrapper","icon","sortIcon","component","label","newMapButton","clickable","filterButton","prevOpenSortMenu","role","disablePortal","onChange","radioGroup","control","formControlLabel","sortButton","display","justifyContent","fontSize","margin","marginRight","GridView","maps","handleSnackOpen","container","direction","rootGrid","spacing","obj","item","xs","sm","md","lg","cardGrid","array","flexGrow","minWidth","ToggleView","exclusive","toggleWrapper","theme","headline","fontWeight","alignItems","divider","statisticsBoxWrapper","statisticsBox","chip","StyledRadio","other","disableRipple","checkedIcon","join","borderRadius","backgroundImage","outline","outlineOffset","background","content","createMuiTheme","palette","primary","globalURLs","StyleChip","DialogWrapper","onClose","aria-labelledby","fullWidth","onToggle","dividers","gutterBottom","abstract","light","popular_count","share_count","rating","bool","DialogTitle","closeButton","position","right","top","grey","children","disableTypography","DialogContent","DialogActions","ListView","table","align","mapEl","mapRow","zIndex","overflow","close","snackBarBg","appFrame","appBar","transitions","easing","sharp","duration","leavingScreen","menuButton","marginTop","breakpoints","up","noMaps","textAlign","MapList","setMaps","loadingMaps","setLoadingMaps","setMapsView","setSortMapsBy","setFilterMapsBy","snackOpen","setSnackOpen","handleRequestClose","reason","useEffect","params","order_by","owner__username__in","mapsApiUrl","then","response","objects","getMaps","nextView","newMap","anchorOrigin","vertical","horizontal","autoHideDuration","aria-describedby","message","ListItem","openMapMenu","setOpenMapMenu","setOpenDialog","scope","mapTitle","float","render","document","getElementById","useStylesFacebook","makeStyles","bottom","animationDuration","left","circle","strokeLinecap","FacebookCircularProgress","size","thickness","disableShrink","useStyles"],"mappings":"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","file":"CartoviewTerria.bundle.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"CartoviewTerria\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"CartoviewTerria\"] = factory();\n\telse\n\t\troot[\"CartoviewTerria\"] = factory();\n})(window, function() {\nreturn "," \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t0: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/static/MapsViewer/dist/\";\n\n \tvar jsonpArray = window[\"webpackJsonp_name_\"] = window[\"webpackJsonp_name_\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([\"tjUo\",1]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","export default __webpack_public_path__ + \"03a240394c6d0e370cafd88c14a7c01b.png\";","import { Hidden, Link, Toolbar, Typography } from '@material-ui/core'\nimport PropTypes from 'prop-types'\nimport React from 'react'\nimport ToggleView from './ToggleView'\nimport styles from './Styles'\nimport terriaLogo from '../../../img/terria-logo.png'\nimport { withStyles } from '@material-ui/core/styles'\n\nconst Navbar = ({ classes, mapsView, handleChangeMapsView }) => {\n\n    return (\n        <Toolbar disableGutters>\n            <Link href=\"/\" className={classes.navLink} title=\"Home\">\n                <img src={terriaLogo} alt=\"Terria Maps list\" className={classes.media}/>\n            </Link>\n            <Typography variant=\"h5\" type=\"title\" color=\"inherit\" noWrap className={classes.title}>\n                Terria Map\n            </Typography>\n            <Hidden smDown>\n                <ToggleView handleChangeMapsView={handleChangeMapsView} mapsView={mapsView} className={classes.toggle}/>\n            </Hidden>\n        </Toolbar>\n    )\n}\n\nNavbar.propTypes = {\n    classes: PropTypes.object.isRequired,\n    mapsView: PropTypes.string.isRequired,\n    handleChangeMapsView: PropTypes.func.isRequired\n}\n\nexport default withStyles(styles)(Navbar)","import {Card, CardHeader, CardMedia} from '@material-ui/core'\nimport Avatar from '@material-ui/core/Avatar'\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener'\nimport DescriptionIcon from '@material-ui/icons/Description'\nimport DialogWrapper from '../Dialog/DialogWrapper'\nimport Grow from '@material-ui/core/Grow'\nimport IconButton from '@material-ui/core/IconButton'\nimport LaunchIcon from '@material-ui/icons/Launch'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport MenuList from '@material-ui/core/MenuList'\nimport MoreVertIcon from '@material-ui/icons/MoreVert'\nimport Paper from '@material-ui/core/Paper'\nimport Popper from '@material-ui/core/Popper'\nimport PropTypes from 'prop-types'\nimport React from 'react'\nimport ShareIcon from '@material-ui/icons/Share'\nimport Typography from '@material-ui/core/Typography'\nimport copy from 'copy-to-clipboard'\nimport styles from './Styles'\nimport {withStyles} from '@material-ui/core/styles'\n\nclass MapCard extends React.Component {\n    constructor(props) {\n        super(props)\n        this.anchorRef = React.createRef()\n    }\n    \n    state = {\n        open: false,\n        anchorEl: null,\n        openDialog: false\n    }\n\n    handleToggle = () => {\n        this.setState({\n            open: !this.state.open\n        })\n    }\n    handleClose = (event) => {\n        if (this.anchorRef.current && this.anchorRef.current.contains(event.target)) {\n            return\n        }\n        this.setState({\n            open: false\n        })\n    }\n    copyTo = (id) => {\n        const {urls} = this.props\n        copy(urls.getTerriaUrl(id))\n    }\n    handleDialogToggle = () => {\n        this.setState({\n            openDialog: !this.state.openDialog\n        })\n    }\n\n    render() {\n        const {classes, urls} = this.props\n        const {map, openSnack} = this.props\n\n        return (\n            <Card\n                className={classes.card}\n                title={`Open ${map.title} map`}\n            >\n                <CardMedia\n                    className={classes.media}\n                    image={map.thumbnail_url || \"/static/MapsViewer/img/no-img.png\"}\n                    onClick={() => window.location.href = urls.getTerriaUrl(map.id)}\n                />\n                <CardHeader\n                    avatar={\n                        <Avatar aria-label=\"Recipe\" className={classes.avatar}>\n                            {map.owner__username[0].toUpperCase()}\n                        </Avatar>\n                    }\n                    action={\n                        <div>\n                            <IconButton\n                                ref={this.anchorRef}\n                                aria-label=\"grid\"\n                                aria-controls={this.state.open ? 'menu-grid-grow' : undefined}\n                                onClick={this.handleToggle}\n                            >\n                                <MoreVertIcon />\n                            </IconButton>\n                            <Popper open={this.state.open} anchorEl={this.anchorRef.current} placement='bottom' transition>\n                                {({ TransitionProps, placement }) => (\n                                    <Grow\n                                        {...TransitionProps}\n                                        style={{ transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom' }}\n                                    >\n                                        <Paper>\n                                            <ClickAwayListener onClickAway={this.handleClose}>\n                                                <MenuList autoFocusItem={this.state.open} id=\"menu-grid-grow\">\n                                                    <MenuItem>\n                                                        <IconButton\n                                                            className={classes.menuItemButton}\n                                                            onClick={() => window.open(urls.getTerriaUrl(map.id), '_blank')}\n                                                            aria-label=\"Open in browser\"\n                                                        >\n                                                            <LaunchIcon className={classes.menuItemIcon}/>\n                                                            <Typography\n                                                                variant=\"subtitle2\"\n                                                                className={classes.menuItemText}\n                                                            >\n                                                                Open Terria Map\n                                                            </Typography>\n                                                        </IconButton>\n                                                    </MenuItem>\n                                                    <MenuItem>\n                                                        <IconButton\n                                                            className={classes.menuItemButton}\n                                                            onClick={() => {this.copyTo(map.id); openSnack()}}\n                                                            aria-label=\"Share app URL\"\n                                                        >\n                                                            <ShareIcon className={classes.menuItemIcon}/>\n                                                            <Typography\n                                                                variant=\"subtitle2\"\n                                                                className={classes.menuItemText}\n                                                            >\n                                                                Share app URL\n                                                            </Typography>\n                                                        </IconButton>\n                                                    </MenuItem>\n                                                    <MenuItem>\n                                                        <IconButton\n                                                            className={classes.menuItemButton}\n                                                            onClick={this.handleDialogToggle}\n                                                            aria-label=\"Map description\"\n                                                        >\n                                                            <DescriptionIcon className={classes.menuItemIcon}/>\n                                                            <Typography\n                                                                variant=\"subtitle2\"\n                                                                className={classes.menuItemText}\n                                                                aria-haspopup=\"true\"\n                                                            >\n                                                                Show map details\n                                                            </Typography>\n                                                            <DialogWrapper\n                                                                map={map}\n                                                                mapDetailsURL={urls.getMapDetailsUrl(map.id)}\n                                                                openDialog={this.state.openDialog}\n                                                                onDialogChange={this.handleDialogToggle}\n                                                            />\n                                                        </IconButton>\n                                                    </MenuItem>\n                                                </MenuList>\n                                            </ClickAwayListener>\n                                        </Paper>\n                                    </Grow>\n                                )}\n                            </Popper>\n                        </div>\n                    }\n                    title={map.title}\n                    subheader={new Date(map.date).toDateString()}\n                />\n            </Card>\n        )\n    }\n}\n\nMapCard.propTypes = {\n    classes: PropTypes.object.isRequired,\n    urls: PropTypes.object.isRequired,\n    map: PropTypes.object.isRequired,\n    openSnack: PropTypes.func.isRequired\n}\n\nexport default withStyles(styles)(MapCard)\n","import {cyan} from '@material-ui/core/colors'\n\nconst styles = () => ({\n    card: {\n        width: '100%',\n        minHeight: 290,\n        height: 300,\n        boxShadow: 'none',\n        border: '1px solid #DFE1E5',\n        '&:hover': {\n            border: '1px solid #3BBDD4',\n            transform: 'translateY(-10px)',\n            boxShadow: '0 12px 19px -7px #3BBDD4'\n        }\n    },\n    media: {\n        height: 194,\n        cursor: 'pointer'\n    },\n    avatar: {\n        backgroundColor: cyan[500],\n    },\n    menuItemButton: {\n        color: '#3BBDD4',\n        padding: '1px 10px',\n        '&:hover': {\n            backgroundColor: 'transparent'\n        }\n    },\n    menuItemIcon: {\n        marginLeft: -16\n    },\n    menuItemText: {\n        marginLeft: 16\n    },\n    mapDescribtion: {\n        padding: 10\n    }\n})\n\nexport default styles\n","import {\n    Box,\n    Chip,\n    ClickAwayListener,\n    FormControl,\n    FormControlLabel,\n    Grow,\n    Paper,\n    Popper,\n    RadioGroup\n} from '@material-ui/core'\nimport React, {useRef, useState} from 'react'\nimport AddIcon from '@material-ui/icons/Add'\nimport FilterListIcon from '@material-ui/icons/FilterList'\nimport PropTypes from 'prop-types'\nimport SortIcon from '@material-ui/icons/Sort'\nimport StyledRadio from '../../StyledRadio/StyledRadio'\nimport styles from './Styles'\nimport { withStyles } from '@material-ui/core/styles'\n\nconst MapSettings = ({ classes, sortMapsBy, handleChange, filterMapsBy, handleFilterChange, currentUsername, newMapURL }) => {\n    const [openSortMenu, setOpenSortMenu] = useState(false)\n    const [openFilterMenu, setOpenFilterMenu] = useState(false)\n    const anchorSortRef = useRef(null)\n    const anchorFilterRef = useRef(null)\n\n    const handleToggle = () => {\n        setOpenSortMenu((prevOpenSortMenu) => !prevOpenSortMenu)\n    }\n    const handleFilterToggle = () => {\n        setOpenFilterMenu((prevOpenSortMenu) => !prevOpenSortMenu)\n    }\n    const handleSortMenuClose = event => {\n        if (anchorSortRef.current && anchorSortRef.current.contains(event.target)) {\n            return\n        }\n        setOpenSortMenu(false)\n    }\n    const handleFilterMenuClose = event => {\n        if (anchorFilterRef.current && anchorFilterRef.current.contains(event.target)) {\n            return\n        }\n        setOpenFilterMenu(false)\n    }\n\n    return (\n        <Box className={classes.settingWrapper}>\n            <Chip\n                icon={<AddIcon className={classes.sortIcon}/>}\n                component=\"a\"\n                label=\"Create a new map\"\n                href={newMapURL}\n                target=\"_blank\"\n                className={classes.newMapButton}\n                clickable\n            />\n            <Chip\n                icon={<FilterListIcon className={classes.sortIcon}/>}\n                label=\"Filter\"\n                className={classes.filterButton}\n                onClick={handleFilterToggle}\n                ref={anchorFilterRef}\n            />\n            <Popper\n                open={openFilterMenu}\n                anchorEl={anchorFilterRef.current}\n                role={undefined}\n                transition\n                disablePortal\n            >\n                {({TransitionProps, placement}) => (\n                    <Grow\n                        {...TransitionProps}\n                        style={{transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom'}}\n                    >\n                        <Paper>\n                            <ClickAwayListener onClickAway={handleFilterMenuClose}>\n                                <FormControl component=\"fieldset\">\n                                    <RadioGroup\n                                        aria-label=\"filter by\"\n                                        name=\"filter by\"\n                                        value={filterMapsBy}\n                                        onChange={handleFilterChange}\n                                        className={classes.radioGroup}\n                                    >\n                                        <FormControlLabel\n                                            value=\"\"\n                                            control={<StyledRadio/>}\n                                            label=\"All maps\"\n                                            className={classes.formControlLabel}\n                                        />\n                                        <FormControlLabel\n                                            value={currentUsername}\n                                            control={<StyledRadio/>}\n                                            label=\"My maps\"\n                                            className={classes.formControlLabel}\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </ClickAwayListener>\n                        </Paper>\n                    </Grow>\n                )}\n            </Popper>\n            <Chip\n                icon={<SortIcon className={classes.sortIcon}/>}\n                label=\"Sort By\"\n                className={classes.sortButton}\n                onClick={handleToggle}\n                ref={anchorSortRef}\n            />\n            <Popper\n                open={openSortMenu}\n                anchorEl={anchorSortRef.current}\n                role={undefined}\n                transition\n                disablePortal\n            >\n                {({TransitionProps, placement}) => (\n                    <Grow\n                        {...TransitionProps}\n                        style={{transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom'}}\n                    >\n                        <Paper>\n                            <ClickAwayListener onClickAway={handleSortMenuClose}>\n                                <FormControl component=\"fieldset\">\n                                    <RadioGroup\n                                        aria-label=\"order by\"\n                                        name=\"order by\"\n                                        value={sortMapsBy}\n                                        onChange={handleChange}\n                                        className={classes.radioGroup}\n                                    >\n                                        <FormControlLabel\n                                            value=\"-date\"\n                                            control={<StyledRadio/>}\n                                            label=\"Most recent\"\n                                            className={classes.formControlLabel}\n                                        />\n                                        <FormControlLabel\n                                            value=\"date\"\n                                            control={<StyledRadio/>}\n                                            label=\"Less recent\"\n                                            className={classes.formControlLabel}\n                                        />\n                                        <FormControlLabel\n                                            value=\"title\"\n                                            control={<StyledRadio/>}\n                                            label=\"A - Z\"\n                                            className={classes.formControlLabel}\n                                        />\n                                        <FormControlLabel\n                                            value=\"-title\"\n                                            control={<StyledRadio/>}\n                                            label=\"Z - A\"\n                                            className={classes.formControlLabel}\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </ClickAwayListener>\n                        </Paper>\n                    </Grow>\n                )}\n            </Popper>\n        </Box>\n    )\n}\n\nMapSettings.propTypes = {\n    classes: PropTypes.object.isRequired,\n    sortMapsBy: PropTypes.string.isRequired,\n    handleChange: PropTypes.func.isRequired,\n    filterMapsBy: PropTypes.string.isRequired,\n    handleFilterChange: PropTypes.func.isRequired,\n    currentUsername: PropTypes.string.isRequired,\n    newMapURL: PropTypes.string.isRequired\n}\n\nexport default withStyles(styles)(MapSettings)","const styles = () => ({\n    settingWrapper: {\n        display: 'flex',\n        justifyContent: 'flex-end',\n        padding: 10,\n        ['@media (max-width: 768px)']: {\n            justifyContent: 'center'\n        }\n    },\n    newMapButton: {\n        padding: 5,\n        backgroundColor: '#09274b',\n        fontSize: 15,\n        color: '#fff',\n        '&:hover, &:focus': {\n            backgroundColor: '#124e96'\n        },\n        ['@media (max-width: 768px)']: {\n            margin: '0px 14px',\n        }\n    },\n    sortIcon: {\n        color: '#fff'\n    },\n    sortButton: {\n        marginRight: '20px',\n        padding: 5,\n        backgroundColor: '#09274b',\n        fontSize: 15,\n        color: '#fff',\n        '&:hover, &:focus': {\n            backgroundColor: '#124e96'\n        },\n        ['@media (max-width: 768px)']: {\n            margin: '0px 14px',\n        }\n    },\n    filterButton: {\n        margin: '0px 10px',\n        padding: 5,\n        backgroundColor: '#09274b',\n        fontSize: 15,\n        color: '#fff',\n        '&:hover, &:focus': {\n            backgroundColor: '#124e96'\n        },\n        ['@media (max-width: 768px)']: {\n            margin: '0px 14px',\n        }\n    },\n    radioGroup: {\n        margin: 10\n    },\n    formControlLabel: {\n        marginLeft: 0,\n        marginRight: 6,\n    },\n})\n\nexport default styles\n","import { Grid } from '@material-ui/core'\nimport MapCard from '../../MapCard/MapCard'\nimport PropTypes from 'prop-types'\nimport React from 'react'\nimport { withStyles } from '@material-ui/core/styles'\n\nconst styles = () => ({\n    rootGrid: {\n        flexGrow: 1,\n        justifyContent: 'center'\n    },\n    cardGrid: {\n        ['@media (max-width: 1024px)']: {\n            minWidth: '33.333333%'\n        }\n    }\n})\n\nconst GridView = ({ classes, maps, urls, handleSnackOpen }) => {\n    return (\n        <Grid container direction={\"row\"} className={classes.rootGrid} spacing={4}>\n            {maps.map((obj, i) => {\n                return (\n                    <Grid key={i} item xs={12} sm={6} md={3} lg={3} className={classes.cardGrid}>\n                        <MapCard openSnack={handleSnackOpen} urls={urls} map={obj}/>\n                    </Grid>\n                )\n            })}\n        </Grid>\n    )\n}\n\nGridView.propTypes = {\n    classes: PropTypes.object.isRequired,\n    maps: PropTypes.array.isRequired,\n    urls: PropTypes.object.isRequired,\n    handleSnackOpen: PropTypes.func.isRequired\n}\n\nexport default withStyles(styles)(GridView)\n","import GridOnIcon from '@material-ui/icons/GridOn'\nimport PropTypes from 'prop-types'\nimport React from 'react'\nimport ToggleButton from '@material-ui/lab/ToggleButton'\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup'\nimport ViewListIcon from '@material-ui/icons/ViewList'\nimport { withStyles } from '@material-ui/core/styles'\n\nconst styles = () => ({\n    toggleWrapper: {\n        marginRight: 20\n    }\n})\n\nconst ToggleView = ({ classes, mapsView, handleChangeMapsView }) => {\n    return(\n        <ToggleButtonGroup value={mapsView} exclusive onChange={handleChangeMapsView} className={classes.toggleWrapper}>\n            <ToggleButton value=\"grid\" aria-label=\"grid\">\n                <GridOnIcon/>\n            </ToggleButton>\n            <ToggleButton value=\"list\" aria-label=\"list\">\n                <ViewListIcon/>\n            </ToggleButton>\n        </ToggleButtonGroup>\n    )\n}\n\nToggleView.propTypes = {\n    classes: PropTypes.object.isRequired,\n    mapsView: PropTypes.string.isRequired,\n    handleChangeMapsView: PropTypes.func.isRequired\n}\n\nexport default withStyles(styles)(ToggleView)\n","const DialogWrapperStyles = (theme) => ({\n    headline: {\n        fontWeight: 'bold',\n        display: 'flex',\n        justifyContent: 'flex-start',\n        alignItems: 'center'\n    },\n    icon: {\n        marginRight: 5\n    },\n    divider: {\n        width: '100%',\n        margin: '10px 0'\n    },\n    statisticsBoxWrapper: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'space-evenly'\n    },\n    statisticsBox: {\n        margin: 5\n    },\n    chip: {\n        margin: theme.spacing(0.5),\n        '&:hover': {\n            backgroundColor: '#124e96'\n        }\n    },\n})\n\nexport default DialogWrapperStyles\n","const styles = () => ({\n    navLink: {\n        '&:hover': {\n            transform: 'translateY(-10px)',\n        },\n    },\n    media: {\n        height: 40,\n        margin: \"0px 20px\",\n        ['@media (max-width: 768px)']: {\n            margin: '0px 14px',\n        }\n    },\n    title: {\n        flexGrow: 1\n    }\n})\n\nexport default styles\n","import PropTypes from 'prop-types'\nimport Radio from '@material-ui/core/Radio'\nimport React from 'react'\nimport {withStyles} from '@material-ui/core/styles'\n\nconst styles = () => ({\n    root: {\n        '&:hover': {\n            backgroundColor: 'transparent',\n        },\n    },\n    icon: {\n        borderRadius: '50%',\n        width: 16,\n        height: 16,\n        boxShadow: 'inset 0 0 0 1px rgba(16,22,26,.2), inset 0 -1px 0 rgba(16,22,26,.1)',\n        backgroundColor: '#f5f8fa',\n        backgroundImage: 'linear-gradient(180deg,hsla(0,0%,100%,.8),hsla(0,0%,100%,0))',\n        '$root.Mui-focusVisible &': {\n            outline: '2px auto rgba(19,124,189,.6)',\n            outlineOffset: 2,\n        },\n        'input:hover ~ &': {\n            backgroundColor: '#ebf1f5',\n        },\n        'input:disabled ~ &': {\n            boxShadow: 'none',\n            background: 'rgba(206,217,224,.5)',\n        },\n    },\n    checkedIcon: {\n        backgroundColor: '#137cbd',\n        backgroundImage: 'linear-gradient(180deg,hsla(0,0%,100%,.1),hsla(0,0%,100%,0))',\n        '&:before': {\n            display: 'block',\n            width: 16,\n            height: 16,\n            backgroundImage: 'radial-gradient(#fff,#fff 28%,transparent 32%)',\n            content: '\"\"',\n        },\n        'input:hover ~ &': {\n            backgroundColor: '#106ba3',\n        },\n    },\n})\n\nconst StyledRadio = props => {\n    const { classes, ...other } = props\n    return (\n        <Radio\n            className={classes.root}\n            disableRipple\n            color=\"default\"\n            checkedIcon={<span className={[classes.icon, classes.checkedIcon].join(\" \")} />}\n            icon={<span className={classes.icon} />}\n            {...other}\n        />\n    )\n}\n\nStyledRadio.propTypes = {\n    classes: PropTypes.object.isRequired\n}\n\nexport default withStyles(styles)(StyledRadio)","import { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles'\nimport MapList from './MapList/MapList'\nimport React from 'react'\nimport { cyan } from '@material-ui/core/colors'\n\nconst theme = createMuiTheme({\n    palette: {\n        type: 'light',\n        primary: {...cyan}\n    },\n})\n\nconst TerriaViewer = () => {\n    // globalURLs is defined in list template.\n    // eslint-disable-next-line no-undef\n    const urls = globalURLs\n    return (\n        <MuiThemeProvider theme={theme}>\n            <MapList urls={urls}/>\n        </MuiThemeProvider>\n    )\n}\n\nexport default TerriaViewer","import { DialogActions, DialogContent, DialogTitle } from \"./DialogComponents\"\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\"\nimport Box from \"@material-ui/core/Box\"\nimport Button from \"@material-ui/core/Button\"\nimport Chip from '@material-ui/core/Chip'\nimport Dialog from \"@material-ui/core/Dialog\"\nimport DialogWrapperStyles from \"./Styles\"\nimport Divider from \"@material-ui/core/Divider\"\nimport PropTypes from 'prop-types'\nimport React from \"react\"\nimport ShareIcon from \"@material-ui/icons/Share\"\nimport ShortTextIcon from \"@material-ui/icons/ShortText\"\nimport StarIcon from \"@material-ui/icons/Star\"\nimport TodayIcon from \"@material-ui/icons/Today\"\nimport Typography from \"@material-ui/core/Typography\"\nimport VisibilityIcon from \"@material-ui/icons/Visibility\"\nimport { withStyles } from \"@material-ui/core/styles\"\n\nconst StyleChip = withStyles({\n    root: {\n        color:'#fff',\n        backgroundColor: '#09274b'\n    }\n})(Chip)\n\nconst DialogWrapper = ({classes, map, mapDetailsURL, openDialog, onDialogChange}) => {\n\n    return (\n        <Dialog\n            open={openDialog}\n            onClose={onDialogChange}\n            aria-labelledby=\"customized-dialog-title\"\n            fullWidth\n        >\n            <DialogTitle\n                id=\"customized-dialog-title\"\n                onToggle={onDialogChange}\n            >\n                Map details\n            </DialogTitle>\n            <DialogContent dividers>\n                <Typography variant=\"h5\" gutterBottom>\n                    {map.title}\n                </Typography>\n\n                <Typography variant=\"body1\" className={classes.headline}>\n                    <ShortTextIcon className={classes.icon}/>\n                    Description:\n                </Typography>\n                <Typography gutterBottom variant=\"body1\">\n                    {map.abstract === \"\" ? \"No Description\" : map.abstract}\n                </Typography>\n\n                <Divider light className={classes.divider}/>\n\n                <Typography variant=\"body1\" className={classes.headline}>\n                    <TodayIcon className={classes.icon}/>\n                    Publication Date:\n                </Typography>\n                <Typography gutterBottom variant=\"body1\">\n                    {new Date(map.date).toDateString()}\n                </Typography>\n\n                <Divider light className={classes.divider}/>\n\n                <Typography variant=\"body1\" className={classes.headline}>\n                    <AccountCircleIcon className={classes.icon}/>\n                    Owner:\n                </Typography>\n                <Typography gutterBottom variant=\"body1\">\n                    {map.owner__username}\n                </Typography>\n\n                <Divider light className={classes.divider}/>\n                <Box className={classes.statisticsBoxWrapper}>\n                    <img\n                        alt=\"Map Thumbnail\"\n                        src={map.thumbnail_url || \"/static/MapsViewer/img/no-img.png\"}\n                        title={map.title}\n                    />\n                    <div className={classes.statisticsBox}>\n                        <StyleChip\n                            className={classes.chip}\n                            color=\"primary\"\n                            icon={<VisibilityIcon/>}\n                            label={map.popular_count}\n                            title=\"Views count\"\n                        />\n                        <StyleChip\n                            className={classes.chip}\n                            color=\"primary\"\n                            icon={<ShareIcon/>}\n                            label={map.share_count}\n                            title=\"Share count\"\n                        />\n                        <StyleChip\n                            className={classes.chip}\n                            color=\"primary\"\n                            icon={<StarIcon/>}\n                            label={map.rating}\n                            title=\"Rating count\"\n                        />\n                    </div>\n                </Box>\n            </DialogContent>\n            <DialogActions>\n                <Button\n                    onClick={() => window.location.href = mapDetailsURL}\n                    color=\"primary\"\n                    title={`Open more details for ${map.title} map`}\n                >\n                    More details\n                </Button>\n            </DialogActions>\n        </Dialog>\n    )\n}\n\nDialogWrapper.propTypes = {\n    classes: PropTypes.object.isRequired,\n    map: PropTypes.object.isRequired,\n    mapDetailsURL: PropTypes.string.isRequired,\n    openDialog: PropTypes.bool.isRequired,\n    onDialogChange: PropTypes.func.isRequired\n}\n\nexport default withStyles(DialogWrapperStyles)(DialogWrapper)\n","import CloseIcon from '@material-ui/icons/Close'\nimport IconButton from '@material-ui/core/IconButton'\nimport MuiDialogActions from '@material-ui/core/DialogActions'\nimport MuiDialogContent from '@material-ui/core/DialogContent'\nimport MuiDialogTitle from '@material-ui/core/DialogTitle'\nimport React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport {withStyles} from '@material-ui/core/styles'\n\nconst styles = (theme) => ({\n    root: {\n        margin: 0,\n        padding: theme.spacing(2),\n    },\n    closeButton: {\n        position: 'absolute',\n        right: theme.spacing(1),\n        top: theme.spacing(1),\n        color: theme.palette.grey[500],\n    },\n})\n\nexport const DialogTitle = withStyles(styles)((props) => {\n    const {children, classes, onToggle, ...other} = props\n    return (\n        <MuiDialogTitle disableTypography className={classes.root} {...other}>\n            <Typography variant=\"h6\">{children}</Typography>\n            <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onToggle}>\n                <CloseIcon/>\n            </IconButton>\n        </MuiDialogTitle>\n    )\n})\n\nexport const DialogContent = withStyles((theme) => ({\n    root: {\n        padding: theme.spacing(2),\n    },\n}))(MuiDialogContent)\n\nexport const DialogActions = withStyles((theme) => ({\n    root: {\n        margin: 0,\n        padding: theme.spacing(1),\n    },\n}))(MuiDialogActions)\n","import {\n    Table,\n    TableBody,\n    TableCell,\n    TableContainer,\n    TableHead,\n    TableRow\n} from '@material-ui/core'\nimport ListItem from './ListItem/ListItem'\nimport PropTypes from 'prop-types'\nimport React from 'react'\nimport { withStyles } from '@material-ui/core/styles'\n\nconst styles = () => ({\n    table: {\n        minWidth: 650,\n    },\n    mapRow: {\n        '&:hover': {\n            backgroundColor: '#b0e4ed',\n            transition: 'all 0.2s ease-in-out',\n            boxShadow: '0 9px 4px -6px #3bbdd4'\n        },\n    }\n})\n\nconst ListView = ({ classes, maps, urls, openSnack }) => {\n    return (\n        <TableContainer>\n            <Table className={classes.table} aria-label=\"simple table\">\n                <TableHead>\n                    <TableRow>\n                        <TableCell>Map</TableCell>\n                        <TableCell align=\"right\">Owner</TableCell>\n                        <TableCell align=\"right\">Publication Date</TableCell>\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {\n                        maps.map(mapEl => (\n                            <TableRow key={mapEl.id} className={classes.mapRow}>\n                                <ListItem openSnack={openSnack} urls={urls} map={mapEl}/>\n                            </TableRow>\n                        ))}\n                </TableBody>\n            </Table>\n        </TableContainer>\n    )\n}\n\nListView.propTypes = {\n    classes: PropTypes.object.isRequired,\n    maps: PropTypes.array.isRequired,\n    urls: PropTypes.object.isRequired,\n    openSnack: PropTypes.func.isRequired\n}\n\nexport default withStyles(styles)(ListView)\n","const styles = theme => ({\n    root: {\n        width: '100%',\n        height: '100%',\n        zIndex: 1,\n        overflow: 'hidden',\n    },\n    close: {\n        width: theme.spacing(4),\n        height: theme.spacing(4),\n    },\n    snackBarBg: {\n        backgroundColor: '#09274b'\n    },\n    appFrame: {\n        position: 'relative',\n        display: 'flex',\n        width: '100%',\n        height: '100%',\n    },\n    appBar: {\n        position: 'absolute',\n        transition: theme.transitions.create(['margin', 'width'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n    },\n    menuButton: {\n        marginLeft: 12,\n        marginRight: 20,\n    },\n    content: {\n        width: '100%',\n        flexGrow: 1,\n        padding: theme.spacing(3),\n        transition: theme.transitions.create('margin', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        height: 'calc(100% - 45px)',\n        marginTop: 45,\n        [theme.breakpoints.up('sm')]: {\n            content: {\n                height: 'calc(100% - 64px)',\n                marginTop: 64,\n            },\n        },\n    },\n    noMaps: {\n        textAlign: 'center'\n    }\n})\n\nexport default styles\n","import {\n    AppBar,\n    Box,\n    IconButton,\n    Snackbar,\n    SnackbarContent,\n    Typography\n} from '@material-ui/core'\nimport React, {Fragment, useEffect, useState} from 'react'\nimport CloseIcon from '@material-ui/icons/Close'\nimport CustomizedCircularProgress from '../CircularProgress/CustomCircularProgress'\nimport GridView from './MapView/GridView'\nimport ListView from './MapView/ListView'\nimport MapSettings from './MapSettings/MapSettings'\nimport Navbar from '../Navbar/Navbar'\nimport PropTypes from 'prop-types'\nimport axios from 'axios'\nimport styles from './Styles'\nimport {withStyles} from '@material-ui/core/styles'\n\nconst MapList = ({classes, urls}) => {\n    const [maps, setMaps] = useState([])\n    const [loadingMaps, setLoadingMaps] = useState(true)\n    const [mapsView, setMapsView] = useState('grid')\n    const [sortMapsBy, setSortMapsBy] = useState('-date')\n    const [filterMapsBy, setFilterMapsBy] = useState('')\n    const [snackOpen, setSnackOpen] = useState(false)\n\n    const handleSnackOpen = () => setSnackOpen(true)\n\n    const handleRequestClose = (event, reason) => {\n        if (reason === 'clickaway') {\n            return\n        }\n        setSnackOpen(false)\n    }\n\n    const getMaps = () => {\n        if (!loadingMaps){\n            setLoadingMaps(true)\n        }\n        let params = {\n            order_by: sortMapsBy,\n        }\n        if ( filterMapsBy !== '' ){\n            params.owner__username__in = filterMapsBy\n        }\n        else {\n            if (\"owner__username__in\" in params){\n                delete params.owner__username__in\n            }\n        }\n        axios(urls.mapsApiUrl, { params })\n            .then(response => {\n                setMaps(response.data.objects)\n                setLoadingMaps(false)\n            })\n    }\n\n    useEffect(() => {\n        getMaps()\n    }, [sortMapsBy, filterMapsBy])\n\n    const handleChange = event => {\n        setSortMapsBy(event.target.value)\n    }\n\n    const handleFilterChange = event => setFilterMapsBy(event.target.value)\n\n    const handleChangeMapsView = (event, nextView) => {\n        setMapsView(nextView)\n    }\n\n    return (\n        <div className={classes.root}>\n            <div className={classes.appFrame}>\n                <AppBar className={classes.appBar} position=\"static\">\n                    <Navbar\n                        mapsView={mapsView}\n                        handleChangeMapsView={handleChangeMapsView}\n                    />\n                </AppBar>\n                <main className={classes.content}>\n                    <MapSettings\n                        sortMapsBy={sortMapsBy}\n                        handleChange={handleChange}\n                        filterMapsBy={filterMapsBy}\n                        handleFilterChange={handleFilterChange}\n                        currentUsername={urls.currentUsername}\n                        newMapURL={urls.newMap}\n                    />\n                    {\n                        loadingMaps ? (\n                            <CustomizedCircularProgress />\n                        ):(\n                            <Box>\n                                {\n                                    maps.length !== 0 ? (\n                                        <Fragment>\n                                            {\n                                                mapsView === 'grid' ?\n                                                    <GridView maps={maps} handleSnackOpen={handleSnackOpen} urls={urls}/>\n                                                    :\n                                                    <ListView maps={maps} urls={urls} openSnack={handleSnackOpen}/>\n                                            }\n                                            <Snackbar\n                                                anchorOrigin={{vertical: 'bottom', horizontal: 'left'}}\n                                                open={snackOpen}\n                                                onClose={handleRequestClose}\n                                                autoHideDuration={3000}\n                                            >\n                                                <SnackbarContent\n                                                    className={classes.snackBarBg}\n                                                    aria-describedby=\"message-id\"\n                                                    message={<span id=\"message-id\">URL Copied to Clipboard</span>}\n                                                    action={[\n                                                        <IconButton\n                                                            key=\"close\"\n                                                            aria-label=\"Close\"\n                                                            color=\"inherit\"\n                                                            className={classes.close}\n                                                            onClick={handleRequestClose}\n                                                        >\n                                                            <CloseIcon/>\n                                                        </IconButton>,\n                                                    ]}\n                                                />\n                                            </Snackbar>\n                                        </Fragment>\n                                    ):(\n                                        <Typography variant=\"h3\" gutterBottom className={classes.noMaps}>\n                                            There are no available maps\n                                        </Typography>\n                                    )\n                                }\n                            </Box>\n                        )\n                    }\n                </main>\n            </div>\n        </div>\n    )\n}\n\nMapList.propTypes = {\n    classes: PropTypes.object.isRequired,\n    urls: PropTypes.object.isRequired\n}\n\nexport default withStyles(styles)(MapList)\n","import {\n    Avatar,\n    ClickAwayListener,\n    Grow,\n    MenuItem,\n    MenuList,\n    Paper,\n    Popper,\n    TableCell\n} from '@material-ui/core'\nimport React, { Fragment, useRef, useState } from 'react'\nimport DescriptionIcon from '@material-ui/icons/Description'\nimport DialogWrapper from '../../../Dialog/DialogWrapper'\nimport IconButton from '@material-ui/core/IconButton'\nimport LaunchIcon from '@material-ui/icons/Launch'\nimport MoreVertIcon from '@material-ui/icons/MoreVert'\nimport PropTypes from 'prop-types'\nimport ShareIcon from '@material-ui/icons/Share'\nimport Typography from '@material-ui/core/Typography'\nimport copy from 'copy-to-clipboard'\nimport { cyan } from '@material-ui/core/colors'\nimport { withStyles } from '@material-ui/core/styles'\n\nconst styles = () => ({\n    mapTitle: {\n        cursor: 'pointer'\n    },\n    avatar: {\n        backgroundColor: cyan[500],\n        float: 'right'\n    },\n    menuItemButton: {\n        color: '#3BBDD4',\n        padding: '1px 10px',\n        '&:hover': {\n            backgroundColor: 'transparent'\n        }\n    },\n    menuItemIcon: {\n        marginLeft: -16\n    },\n    menuItemText: {\n        marginLeft: 16\n    },\n})\n\nconst ListItem = ({ classes, urls, map, openSnack }) => {\n    const anchorRef = useRef()\n    const [openMapMenu, setOpenMapMenu] = useState(false)\n    const [openDialog, setOpenDialog] = useState(false)\n\n    const handleToggle = () => {\n        setOpenMapMenu(!openMapMenu)\n    }\n\n    const handleClose = (event) => {\n        if (anchorRef.current && anchorRef.current.contains(event.target)) {\n            return\n        }\n        setOpenMapMenu(false)\n    }\n\n    const copyTo = (id) => {\n        copy(urls.getTerriaUrl(id))\n    }\n\n    const handleDialogToggle = () => {\n        setOpenDialog(!openDialog)\n    }\n    \n    return (\n        <Fragment>\n            <TableCell \n                component=\"th\" \n                scope=\"row\"\n                title={`Open ${map.title} map`}\n                onClick={() => window.location.href = urls.getTerriaUrl(map.id)}\n                className={classes.mapTitle}\n            >\n                {map.title}\n            </TableCell>\n            <TableCell align=\"right\">\n                <Avatar\n                    aria-label=\"Recipe\"\n                    className={classes.avatar}\n                    title={map.owner__username}>\n                    {map.owner__username[0].toUpperCase()}\n                </Avatar>\n            </TableCell>\n            <TableCell align=\"right\">\n                {new Date(map.date).toDateString()}\n            </TableCell>\n            <TableCell align=\"right\">\n                <IconButton\n                    ref={anchorRef}\n                    aria-label=\"list\"\n                    aria-controls={openMapMenu ? 'menu-list-grow' : undefined}\n                    onClick={handleToggle}\n                >\n                    <MoreVertIcon />\n                </IconButton>\n                <Popper\n                    open={openMapMenu}\n                    anchorEl={anchorRef.current}\n                    placement='bottom'\n                    transition\n                >\n                    {({ TransitionProps, placement }) => (\n                        <Grow\n                            {...TransitionProps}\n                            style={{ transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom' }}\n                        >\n                            <Paper>\n                                <ClickAwayListener onClickAway={handleClose}>\n                                    <MenuList autoFocusItem={openMapMenu} id=\"menu-list-grow\">\n                                        <MenuItem>\n                                            <IconButton\n                                                className={classes.menuItemButton}\n                                                onClick={() => window.open(urls.getTerriaUrl(map.id), '_blank')}\n                                                aria-label=\"Open in browser\"\n                                            >\n                                                <LaunchIcon className={classes.menuItemIcon}/>\n                                                <Typography\n                                                    variant=\"subtitle2\"\n                                                    className={classes.menuItemText}\n                                                >\n                                                    Open Terria Map\n                                                </Typography>\n                                            </IconButton>\n                                        </MenuItem>\n                                        <MenuItem>\n                                            <IconButton\n                                                className={classes.menuItemButton}\n                                                onClick={() => {copyTo(map.id); openSnack()}}\n                                                aria-label=\"Share app URL\"\n                                            >\n                                                <ShareIcon className={classes.menuItemIcon}/>\n                                                <Typography\n                                                    variant=\"subtitle2\"\n                                                    className={classes.menuItemText}\n                                                >\n                                                    Share app URL\n                                                </Typography>\n                                            </IconButton>\n                                        </MenuItem>\n                                        <MenuItem>\n                                            <IconButton\n                                                className={classes.menuItemButton}\n                                                onClick={handleDialogToggle}\n                                                aria-label=\"Map description\"\n                                            >\n                                                <DescriptionIcon className={classes.menuItemIcon}/>\n                                                <Typography\n                                                    variant=\"subtitle2\"\n                                                    className={classes.menuItemText}\n                                                    aria-haspopup=\"true\"\n                                                >\n                                                    Show map details\n                                                </Typography>\n                                                <DialogWrapper\n                                                    map={map}\n                                                    mapDetailsURL={urls.getMapDetailsUrl(map.id)}\n                                                    openDialog={openDialog}\n                                                    onDialogChange={handleDialogToggle}\n                                                />\n                                            </IconButton>\n                                        </MenuItem>\n                                    </MenuList>\n                                </ClickAwayListener>\n                            </Paper>\n                        </Grow>\n                    )}\n                </Popper>\n            </TableCell>\n        </Fragment>\n    )\n}\n\nListItem.propTypes = {\n    classes: PropTypes.object.isRequired,\n    urls: PropTypes.object.isRequired,\n    map: PropTypes.object.isRequired,\n    openSnack: PropTypes.func.isRequired\n}\n\nexport default withStyles(styles)(ListItem)","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport TerriaViewer from './components/TerriaViewer'\n\nReactDOM.render(<TerriaViewer />, document.getElementById('map-list'))\n","import CircularProgress from '@material-ui/core/CircularProgress'\nimport React from 'react'\nimport {makeStyles} from '@material-ui/core/styles'\n\nconst useStylesFacebook = makeStyles(() => ({\n    root: {\n        position: 'relative',\n    },\n    bottom: {\n        color: '#3BBDD4',\n    },\n    top: {\n        color: '#124e96',\n        animationDuration: '550ms',\n        position: 'absolute',\n        left: 0,\n    },\n    circle: {\n        strokeLinecap: 'round',\n    },\n}))\n\nconst FacebookCircularProgress = props => {\n    const classes = useStylesFacebook()\n\n    return (\n        <div className={classes.root}>\n            <CircularProgress\n                variant=\"determinate\"\n                className={classes.bottom}\n                size={40}\n                thickness={4}\n                {...props}\n                value={100}\n            />\n            <CircularProgress\n                variant=\"indeterminate\"\n                disableShrink\n                className={classes.top}\n                classes={{\n                    circle: classes.circle,\n                }}\n                size={40}\n                thickness={4}\n                {...props}\n            />\n        </div>\n    )\n}\n\nconst useStyles = makeStyles({\n    root: {\n        flexGrow: 1,\n        display: 'flex',\n        justifyContent: 'center'\n    },\n})\n\nconst CustomizedCircularProgress = () => {\n    const classes = useStyles()\n    return (\n        <div className={classes.root}>\n            <FacebookCircularProgress/>\n        </div>\n    )\n}\n\nexport default CustomizedCircularProgress\n"],"sourceRoot":""}